<% options ||= {} %>
<% options = {
  current_parent: parent, show_title: true, append_new_link: true
}.merge(options) %>
<% if options[:show_title] %>
<h3><%= t("#{type}.index.title") %></h3>
<% end %>
<% if collection.none? || collection.select{|e| e.id.present? }.none? %>
<p><%= I18n.t("#{type}.index.empty_collection")%></p>
<% else %>
<table class="table table-striped">
  <thead>
    <tr class="<%= cycle('odd', 'even') %>">
  <% (columns.is_a?(Hash) ? columns.keys : columns).map{|c| c.gsub('_id', '')}.each do |column| %>
      <th><%= t("activerecord.attributes.#{type.singularize}.#{column}") %></th>
  <% end %>
      <th></th>
    </tr>
  </thead>
  <tbody>
  <% collection.select{|e| e.id.present? }.each do |resource| %>
    <tr class="<%= cycle('odd', 'even') %>">
    <% (columns.is_a?(Hash) ? columns.keys : columns).each do |column| %>
      <td>
        <%= table_cell column, resource, columns.is_a?(Hash) ? columns[column] : nil %>
      </td>
    <% end %>
      <td>
        <%= render partial: 'shared/resource/actions', locals: { type: type, resource: resource } %>
      </td>
    </tr>
  <% end %>
  </tbody>
</table>
<% end %>

<% if options[:append_new_link] %>
  <% if parent %>
    <%= link_to t("#{type}.new.title"), eval("new_#{root_model_class_name(options[:current_parent]).tableize.singularize}_#{type.singularize}_path(options[:current_parent])") %>
  <% else %>
    <%= link_to t("#{type}.new.title"), eval("new_#{type.singularize}_path") %>
  <% end %>
<% end %>
